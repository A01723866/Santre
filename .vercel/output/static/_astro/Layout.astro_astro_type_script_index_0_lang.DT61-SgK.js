const E="modulepreload",y=function(r){return"/"+r},m={},v=function(a,c,l){let u=Promise.resolve();if(c&&c.length>0){let o=function(e){return Promise.all(e.map(s=>Promise.resolve(s).then(i=>({status:"fulfilled",value:i}),i=>({status:"rejected",reason:i}))))};document.getElementsByTagName("link");const t=document.querySelector("meta[property=csp-nonce]"),f=t?.nonce||t?.getAttribute("nonce");u=o(c.map(e=>{if(e=y(e),e in m)return;m[e]=!0;const s=e.endsWith(".css"),i=s?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${e}"]${i}`))return;const n=document.createElement("link");if(n.rel=s?"stylesheet":E,s||(n.as="script"),n.crossOrigin="",n.href=e,f&&n.setAttribute("nonce",f),document.head.appendChild(n),s)return new Promise((h,p)=>{n.addEventListener("load",h),n.addEventListener("error",()=>p(new Error(`Unable to preload CSS for ${e}`)))})}))}function d(o){const t=new Event("vite:preloadError",{cancelable:!0});if(t.payload=o,window.dispatchEvent(t),!t.defaultPrevented)throw o}return u.then(o=>{for(const t of o||[])t.status==="rejected"&&d(t.reason);return a().catch(d)})};document.addEventListener("DOMContentLoaded",async()=>{try{const{initFirebase:r}=await v(async()=>{const{initFirebase:l}=await import("./init-firebase.C1I75T5J.js");return{initFirebase:l}},[]),{app:a,analytics:c}=r();console.log("Firebase initialized successfully")}catch(r){console.error("Error initializing Firebase:",r)}});
