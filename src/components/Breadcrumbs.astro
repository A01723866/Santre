---
export interface Props {
  items: {
    name: string;
    href: string;
  }[];
}

const { items } = Astro.props;
---

<nav class="bg-gray-50 border-b border-gray-200" aria-label="Breadcrumb">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="flex items-center space-x-2 py-3">
      <!-- Home Icon -->
      <a href="/" class="text-gray-400 hover:text-gray-500 transition-colors" aria-label="Inicio">
        <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
          <path d="M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z"></path>
        </svg>
      </a>
      
      {items.map((item, index) => (
        <div class="flex items-center space-x-2">
          <!-- Separator -->
          <svg class="w-4 h-4 text-gray-400" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
            <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"></path>
          </svg>
          
          {index === items.length - 1 ? (
            <!-- Current page (last item) -->
            <span class="text-sm font-medium text-gray-900" aria-current="page">
              {item.name}
            </span>
          ) : (
            <!-- Link to other pages -->
            <a href={item.href} class="text-sm text-gray-500 hover:text-gray-700 transition-colors">
              {item.name}
            </a>
          )}
        </div>
      ))}
    </div>
  </div>
</nav>

<style>
  /* Ensure proper spacing between breadcrumb items */
  .flex.items-center.space-x-2:not(:first-child) {
    margin-left: 0.5rem;
  }
</style>
